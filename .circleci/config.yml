version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: maven build deploy inoa-service
          command: |
            cd inoa-service
            mvn -s ../.circleci/settings.xml deploy
      - run:
          name: maven build deploy aloha-service
          command: |
            cd aloha-service
            mvn -s ../.circleci/settings.xml deploy
      - run:
          name: maven build deploy aggregate-service
          command: |
            cd aggregate-service
            mvn -s ../.circleci/settings.xml -DforkCount=0 deploy







            ## Java Maven CircleCI 2.0 configuration file
            ##
            ## Check https://circleci.com/docs/2.0/language-java/ for more details
            ##
            #version: 2
            #jobs:
            #  build:
            #    docker:
            #      # specify the version you desire here
            #      - image: circleci/openjdk:8-jdk
            #
            #      # Specify service dependencies here if necessary
            #      # CircleCI maintains a library of pre-built images
            #      # documented at https://circleci.com/docs/2.0/circleci-images/
            #      # - image: circleci/postgres:9.4
            #
            #    working_directory: ~/repo
            #
            #    environment:
            #      # Customize the JVM maximum heap limit
            #      MAVEN_OPTS: -Xmx3200m
            #
            #    steps:
            #      - checkout
            #
            #      # Download and cache dependencies
            #      - restore_cache:
            #          keys:
            #            - v1-dependencies-{{ checksum "pom.xml" }}
            #            # fallback to using the latest cache if no exact match is found
            #            - v1-dependencies-
            #
            ##      - run: mvn dependency:go-offline
            #
            #      - save_cache:
            #          paths:
            #            - ~/.m2
            #          key: v1-dependencies-{{ checksum "pom.xml" }}
            #
            #      - run:
            #          name: Install jFrog CLI
            #          command: curl -fL https://getcli.jfrog.io | sh
            #      - run: mvn -pl inoa-service install
            #      - run: ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_APIKEY --interactive=false
            #

            #      - run: mvn -pl aloha-service deploy
            #      - run: mvn -pl aggregate-service integration-test



defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: 'circleci/openjdk:8-jdk-browsers'

source: &source
  root: ~/repo
  paths:
    - .'

version: 2.1
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      <<: *source
      steps:
        - checkout
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "pom.xml" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
        - run: mvn clean install
        - save_cache:
            paths:
              - ~/.m2
            key: v1-dependencies-{{ checksum "pom.xml" }}
        - persist_to_workspace:
            <<: *source

      steps:
        - attach_workspace:
            at: .
        - run:
            name: Deploy to Artifactory
            command: mvn deploy


      steps:
        - checkout
        - run:
            name: Cut new release
            command: |
              # assemble current and new version numbers
              OLD_VERSION=$(mvn -s .circleci/settings.xml -q \
                -Dexec.executable="echo" -Dexec.args='${project.version}' \
                --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
              NEW_VERSION="${OLD_VERSION/-SNAPSHOT/}"
              echo "Releasing $OLD_VERSION as $NEW_VERSION"

              # ensure dependencies use release versions
              mvn -s .circleci/settings.xml versions:use-releases

              # write release version to POM
              mvn -s .circleci/settings.xml versions:set -DnewVersion="$NEW_VERSION"

              # setup git
              git config user.name "Release Script"
              git config user.email "builds@understoryweather.com"

              # commit and tag
              git add pom.xml
              git commit -m "release: $NEW_VERSION"
              git tag "$NEW_VERSION"

              # land on master and publish
              git checkout master
              git merge --no-edit release
              git push origin master --tags

              # increment minor version number
              MAJ_VERSION=$(echo "$NEW_VERSION" | cut -d '.' -f 1)
              MIN_VERSION=$(echo "$NEW_VERSION" | cut -d '.' -f 2)
              NEW_MINOR=$(($MIN_VERSION + 1))
              DEV_VERSION="$MAJ_VERSION.$NEW_MINOR-SNAPSHOT"

              # ready development branch
              git checkout verify
              git merge --no-edit release
              mvn -s .circleci/settings.xml versions:set -DnewVersion="$DEV_VERSION"
              git add pom.xml
              git commit -m "ready for development: $DEV_VERSION"
              git push origin verify

              # clean up release branch
              git push origin :release


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: /^(master|verify)$/
      - release:
          requires:
            - build
          filters:
            branches:
              only: /^release$/

#version: 2.1
#jobs:
#  build:
#    docker:
#      - image: circleci/openjdk:8-jdk
#    working_directory: ~/repo
#    environment:
#      # Customize the JVM maximum heap limit
#      MAVEN_OPTS: -Xmx3200m
#      INOA-SERVICE: inoa-service
#      ALOHA-SERVICE: aloha-service
#      AGGREGATE-SERVICE: aggregate-service
#    steps:
#      - checkout
#      - run:
#          name: maven build deploy ${INOA-SERVICE}
#          command: |
#            echo $INOA
#            cd inoa-service
#            mvn -s ../.circleci/settings.xml deploy
#      - run:
#          name: maven build deploy $ALOHA-SERVICE
#          command: |
#            cd aloha-service
#            mvn -s ../.circleci/settings.xml deploy
#      - run:
#          name: maven build deploy $AGGREGATE-SERVICE
#          command: |
#            cd aggregate-service
#            mvn -s ../.circleci/settings.xml -DforkCount=0 deploy


